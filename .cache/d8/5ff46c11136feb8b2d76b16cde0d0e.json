{"id":"XeEZ","dependencies":[{"name":"F:\\SelfToolLibrary\\wink-utils\\tsconfig.json","includedInParent":true,"mtime":1650128299632},{"name":"F:\\SelfToolLibrary\\wink-utils\\.babelrc","includedInParent":true,"mtime":1649169224933},{"name":"F:\\SelfToolLibrary\\wink-utils\\package.json","includedInParent":true,"mtime":1656599417389}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.memo=void 0;var e=function(e,r){var t=function t(){for(var o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];var p=t.cache,s=r?r.apply(this,o):o[0];return p[s]||(p[s]=e.apply(this,o)),p[s]};return t.cache={},t};exports.memo=e,exports.default=exports.memo;"},"sourceMaps":{"js":{"mappings":[{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":0}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":13}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":20}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":35}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":43}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":56}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":57}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":64}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":68}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":76}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":86}},{"source":"memo.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":88}},{"source":"memo.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":92}},{"source":"memo.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":1,"column":94}},{"source":"memo.ts","name":null,"original":{"line":5,"column":30},"generated":{"line":1,"column":103}},{"source":"memo.ts","name":null,"original":{"line":5,"column":48},"generated":{"line":1,"column":105}},{"source":"memo.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":108}},{"source":"memo.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":112}},{"source":"memo.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":1,"column":114}},{"source":"memo.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":123}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":127}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":131}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":135}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":137}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":140}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":142}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":144}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":146}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":156}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":163}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":167}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":169}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":172}},{"source":"memo.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":1,"column":182}},{"source":"memo.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":1,"column":185}},{"source":"memo.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":1,"column":189}},{"source":"memo.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":1,"column":191}},{"source":"memo.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":1,"column":193}},{"source":"memo.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":1,"column":199}},{"source":"memo.ts","name":null,"original":{"line":11,"column":20},"generated":{"line":1,"column":201}},{"source":"memo.ts","name":null,"original":{"line":11,"column":29},"generated":{"line":1,"column":203}},{"source":"memo.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":1,"column":205}},{"source":"memo.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":1,"column":211}},{"source":"memo.ts","name":null,"original":{"line":11,"column":48},"generated":{"line":1,"column":216}},{"source":"memo.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":1,"column":219}},{"source":"memo.ts","name":null,"original":{"line":11,"column":69},"generated":{"line":1,"column":221}},{"source":"memo.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":1,"column":224}},{"source":"memo.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":1,"column":231}},{"source":"memo.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":1,"column":233}},{"source":"memo.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":1,"column":238}},{"source":"memo.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":1,"column":240}},{"source":"memo.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":1,"column":243}},{"source":"memo.ts","name":null,"original":{"line":13,"column":26},"generated":{"line":1,"column":245}},{"source":"memo.ts","name":null,"original":{"line":13,"column":32},"generated":{"line":1,"column":251}},{"source":"memo.ts","name":null,"original":{"line":13,"column":38},"generated":{"line":1,"column":256}},{"source":"memo.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":1,"column":260}},{"source":"memo.ts","name":null,"original":{"line":15,"column":17},"generated":{"line":1,"column":262}},{"source":"memo.ts","name":null,"original":{"line":18,"column":9},"generated":{"line":1,"column":266}},{"source":"memo.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":273}},{"source":"memo.ts","name":null,"original":{"line":17,"column":10},"generated":{"line":1,"column":275}},{"source":"memo.ts","name":null,"original":{"line":17,"column":18},"generated":{"line":1,"column":281}},{"source":"memo.ts","name":null,"original":{"line":18,"column":9},"generated":{"line":1,"column":284}},{"source":"memo.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":287}},{"source":"memo.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":295}},{"source":"memo.ts","name":null,"original":{"line":5,"column":17},"generated":{"line":1,"column":300}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":302}},{"source":"memo.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":310}},{"source":"memo.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":1,"column":318}},{"source":"memo.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":1,"column":326}}],"sources":{"memo.ts":"import { TAnyFunction } from \"./debounce\";\r\n\r\nexport type TAnyFunc = (...args: any[]) => any;\r\n\r\nexport const memo = function (fn: TAnyFunction, hasher?: TAnyFunc) {\r\n  const memoFun = function (...argument: any[]) {\r\n    const cache = memoFun.cache;\r\n    // 转换为数组\r\n    // console.log(this,arguments)\r\n    // const args = [].slice.apply(arguments);\r\n    const hashKey = hasher ? hasher.apply(this, argument) : argument[0];\r\n    if (!cache[hashKey]) {\r\n      cache[hashKey] = fn.apply(this, argument);\r\n    }\r\n    return cache[hashKey];\r\n  };\r\n  memoFun.cache = {};\r\n  return memoFun;\r\n};\r\nexport default memo;\r\n"},"lineCount":null}},"error":null,"hash":"bfe153d4708d667f182a476a79c3e1aa","cacheData":{"env":{}}}