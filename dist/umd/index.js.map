{"version":3,"sources":["throttle.ts","UrlGetRequest.ts","debounce.ts","changefilesize.ts","formatnumber.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"..\\..\\src","sourcesContent":["/*\r\n * @Author: t_winkjqzhang\r\n * @Date: 2022-03-31 15:54:52\r\n * @LastEditTime: 2022-04-02 18:12:43\r\n * @Description: Do not edit\r\n */\r\ninterface IThrottle {\r\n  func: Function;\r\n  wait: number;\r\n  options: IOptions;\r\n}\r\n\r\ninterface IOptions {\r\n  leading: boolean;\r\n  trailing: boolean;\r\n}\r\n/**\r\n * @param {Function} func\r\n * @param {number} wait\r\n * @param {IOptions} options\r\n * @return {*}\r\n * @Date: 2022-04-02 10:57:20\r\n */\r\nexport function throttle(\r\n  func: Function,\r\n  wait: number,\r\n  options: IOptions\r\n): Function {\r\n  let timeout: any | null = null,\r\n    context: object | any = null,\r\n    args: any = null; // result\r\n  let previous: number = 0;\r\n  if (!options)\r\n    options = {\r\n      leading: true,\r\n      trailing: true,\r\n    };\r\n  const later = function () {\r\n    previous = options.leading === false ? 0 : new Date().getTime();\r\n    timeout = null;\r\n    func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n  const throttled = function (this: any) {\r\n    const now = new Date().getTime();\r\n    if (!previous && options.leading === false) previous = now;\r\n    const remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n      previous = now;\r\n      func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n  };\r\n  throttled.cancel = () => {\r\n    clearTimeout(timeout);\r\n    previous = 0;\r\n    timeout = null;\r\n  };\r\n  return throttled;\r\n}\r\nexport default throttle;\r\n","/*\r\n * @Author: t_winkjqzhang\r\n * @Date: 2022-03-31 15:54:59\r\n * @LastEditTime: 2022-04-02 17:57:27\r\n * @Description: Do not edit\r\n */\r\n//分离url参数，获取tagid\r\n\r\n/**\r\n * @param {string} url //完整的url\r\n * @param {string} variable //param参数，键\r\n * @returns {string} //param参数，variable对应的值\r\n * @Date: 2022-04-02 15:03:38\r\n * @Description:url分离出参数\r\n */\r\nexport function UrlGetRequest(url: string, variable: string) {\r\n  let query: string = url!.split(\"?\")[1];\r\n  // let query: string = window.location.search.substring(1);\r\n  // 兼容微信授权回来之后 url 错乱的问题\r\n  if (query.indexOf(\"&openid=\") < 0 && query.indexOf(\"openid=\") > 0) {\r\n    query = query.replace(/openid=/, function (m) {\r\n      return \"&\" + m;\r\n    });\r\n  }\r\n  const vars: string[] = query.split(\"&\");\r\n  for (let i = 0; i < vars.length; i++) {\r\n    const pair: string[] = vars[i].split(\"=\");\r\n    if (pair[0] === variable) return pair[1];\r\n  }\r\n  return false;\r\n}\r\nexport default UrlGetRequest;\r\n","//debounce.js\r\n\r\nvar FUNC_ERROR_TEXT = \"Expected a function\";\r\n\r\nvar nativeMax = Math.max, //原生最大值方法\r\n  nativeMin = Math.min; //原生最小值方法\r\ninterface IOptions {\r\n  leading: boolean;\r\n  trailing: boolean;\r\n  maxWait: number;\r\n}\r\n/**\r\n * 函数去抖，也就是说当调用动作n毫秒后，才会执行该动作，若在这n毫秒内又调用此动作则将重新计算执行时间。\r\n *\r\n * @param {Function} func 需要去抖的函数.\r\n * @param {number} [wait=0] 延迟执行的时间.\r\n * @param {Object} [options={}] 选项对象.\r\n * @param {boolean} [options.leading=false] 指定是否在超时前调用.\r\n * @param {number} [options.maxWait] func延迟调用的最大时间.\r\n * @param {boolean} [options.trailing=true] 指定是否在超时后调用.\r\n * @returns {Function} 返回去抖之后的函数.\r\n * @example\r\n *\r\n * // Avoid costly calculations while the window size is in flux.\r\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\r\n *\r\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\r\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\r\n *   'leading': true,\r\n *   'trailing': false\r\n * }));\r\n *\r\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\r\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\r\n * var source = new EventSource('/stream');\r\n * jQuery(source).on('message', debounced);\r\n *\r\n * // Cancel the trailing debounced invocation.\r\n * jQuery(window).on('popstate', debounced.cancel);\r\n */\r\n\r\nexport function isObject(obj) {\r\n  return typeof obj == \"object\";\r\n}\r\nexport function debounce(\r\n  func: Function,\r\n  wait: number = 1000,\r\n  options: IOptions = { leading: true, trailing: true, maxWait: 100000 }\r\n): Function {\r\n  var lastArgs, //上次调用参数\r\n    lastThis, //上次调用this\r\n    maxWait, //最大等待时间\r\n    result, //返回结果\r\n    timerId, //timerId\r\n    lastCallTime, //上次调用debounced时间,即触发时间，不一定会调用func\r\n    lastInvokeTime = 0, //上次调用func时间，即成功执行时间\r\n    leading = false, //超时之前\r\n    maxing = false, //是否传入最大超时时间\r\n    trailing = true; //超时之后\r\n\r\n  if (typeof func != \"function\") {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  wait = Number(wait) || 0;\r\n  if (isObject(options)) {\r\n    leading = !!options.leading;\r\n    maxing = \"maxWait\" in options;\r\n    maxWait = maxing ? nativeMax(Number(options.maxWait) || 0, wait) : maxWait;\r\n    trailing = \"trailing\" in options ? !!options.trailing : trailing;\r\n  }\r\n\r\n  function invokeFunc(time) {\r\n    //调用func，参数为当前时间\r\n    var args = lastArgs, //调用参数\r\n      thisArg = lastThis; //调用的this\r\n\r\n    lastArgs = lastThis = undefined; //清除lastArgs和lastThis\r\n    lastInvokeTime = time; //上次调用时间为当前时间\r\n    result = func.apply(thisArg, args); //调用func，并将结果返回\r\n    return result;\r\n  }\r\n\r\n  function leadingEdge(time) {\r\n    //超时之前调用\r\n    lastInvokeTime = time; //设置上次调用时间为当前时间\r\n    timerId = setTimeout(timerExpired, wait); //开始timer\r\n    return leading ? invokeFunc(time) : result; //如果leading为true，调用func,否则返回result\r\n  }\r\n\r\n  function remainingWait(time) {\r\n    //设置还需要等待的时间\r\n    var timeSinceLastCall = time - lastCallTime, //距离上次触发的时间\r\n      timeSinceLastInvoke = time - lastInvokeTime, //距离上次调用func的时间\r\n      result = wait - timeSinceLastCall; //还需要等待的时间\r\n\r\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\r\n  }\r\n\r\n  function shouldInvoke(time) {\r\n    //是否应该被调用\r\n    var timeSinceLastCall = time - lastCallTime, //距离上次触发时间的时间\r\n      timeSinceLastInvoke = time - lastInvokeTime; //距离上次调用func的时间\r\n\r\n    return (\r\n      lastCallTime === undefined ||\r\n      timeSinceLastCall >= wait ||\r\n      timeSinceLastCall < 0 ||\r\n      (maxing && timeSinceLastInvoke >= maxWait)\r\n    );\r\n  }\r\n\r\n  function timerExpired() {\r\n    //刷新timer\r\n    var time = new Date();\r\n    if (shouldInvoke(time)) {\r\n      //如果可以调用，调用trailingEdge\r\n      return trailingEdge(time);\r\n    }\r\n    timerId = setTimeout(timerExpired, remainingWait(time)); //不调用则重置timerId\r\n  }\r\n\r\n  function trailingEdge(time) {\r\n    //超时之后调用\r\n    timerId = undefined;\r\n\r\n    // Only invoke if we have `lastArgs` which means `func` has been\r\n    // debounced at least once.\r\n    if (trailing && lastArgs) {\r\n      //如果设置trailing为true,并且有lastArgs，调用func\r\n      return invokeFunc(time);\r\n    }\r\n    lastArgs = lastThis = undefined; //清除lastArgs和lastThis\r\n    return result; //否则返回result\r\n  }\r\n\r\n  function cancel() {\r\n    //取消执行\r\n    if (timerId !== undefined) {\r\n      clearTimeout(timerId);\r\n    }\r\n    lastInvokeTime = 0;\r\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\r\n  }\r\n\r\n  function flush() {\r\n    //直接执行\r\n    return timerId === undefined ? result : trailingEdge(new Date());\r\n  }\r\n\r\n  function debounced(this: any) {\r\n    var time = new Date(),\r\n      isInvoking = shouldInvoke(time); //判断是否可以调用\r\n\r\n    lastArgs = arguments; //得到参数\r\n    lastThis = this; //得到this对象\r\n    lastCallTime = time; //触发时间\r\n\r\n    if (isInvoking) {\r\n      if (timerId === undefined) {\r\n        //首次触发，调用leadingEdge\r\n        return leadingEdge(lastCallTime);\r\n      }\r\n      if (maxing) {\r\n        // 处理多次频繁的调用\r\n        timerId = setTimeout(timerExpired, wait); //设置定时器\r\n        return invokeFunc(lastCallTime);\r\n      }\r\n    }\r\n    if (timerId === undefined) {\r\n      //如果没有timer,设置定时器\r\n      timerId = setTimeout(timerExpired, wait);\r\n    }\r\n    return result; //返回result\r\n  }\r\n  debounced.cancel = cancel;\r\n  debounced.flush = flush;\r\n  return debounced;\r\n}\r\nexport default {\r\n  debounce,\r\n};\r\n","/*\r\n * @Author: t_winkjqzhang\r\n * @Date: 2022-04-02 15:12:06\r\n * @LastEditTime: 2022-04-02 17:57:05\r\n * @Description: Do not edit\r\n */\r\n/**\r\n * @param {number} limit\r\n * @return {string} size\r\n * @Date: 2022-04-02 15:23:27\r\n */\r\nexport function changefilesize(limit: number): string {\r\n  var size: string = \"\";\r\n  if (limit < 0.1 * 1024) {\r\n    //小于0.1KB，则转化成B\r\n    size = limit.toFixed(2) + \"B\";\r\n  } else if (limit < 0.1 * 1024 * 1024) {\r\n    //小于0.1MB，则转化成KB\r\n    size = (limit / 1024).toFixed(2) + \"KB\";\r\n  } else if (limit < 0.1 * 1024 * 1024 * 1024) {\r\n    //小于0.1GB，则转化成MB\r\n    size = (limit / (1024 * 1024)).toFixed(2) + \"MB\";\r\n  } else {\r\n    //其他转化成GB\r\n    size = (limit / (1024 * 1024 * 1024)).toFixed(2) + \"GB\";\r\n  }\r\n\r\n  var sizeStr: string = size + \"\"; //转成字符串\r\n  var index: number = sizeStr.indexOf(\".\"); //获取小数点处的索引\r\n  var dou: string = sizeStr!.substr(index + 1, 2); //获取小数点后两位的值\r\n  if (dou === \"00\") {\r\n    //判断后两位是否为00，如果是则删除00\r\n    return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2);\r\n  }\r\n  return size;\r\n}\r\nexport default changefilesize;\r\n","/*\r\n * @Author: t_winkjqzhang\r\n * @Date: 2022-04-02 16:18:36\r\n * @LastEditTime: 2022-04-02 17:58:19\r\n * @Description:\r\n */\r\n/**\r\n * @param {number} num //\r\n * @returns {string} //返回\r\n * @Date: 2022-04-02 16:46:28\r\n */\r\n\r\nexport function formatNumber(num: number): string {\r\n  num = Number(num);\r\n  if (num === 0) {\r\n    return num.toString();\r\n  } else if (num > 1 && num < 1000) {\r\n    return num.toString();\r\n  } else if (num > 1000 && num < 10000) {\r\n    //千\r\n    return (num / 1000).toFixed(2);\r\n  } else if (num > 10000 && num < 1000000) {\r\n    //万\r\n    return (num / 10000).toFixed(2);\r\n  } else if (num > 1000000 && num < 10000000) {\r\n    //百万\r\n    return (num / 1000000).toFixed(2);\r\n  } else if (num > 10000000 && num < 100000000) {\r\n    //千万\r\n    return (num / 10000000).toFixed(2);\r\n  } else if (num > 100000000 && num < 10000000000) {\r\n    //亿\r\n    return (num / 100000000).toFixed(2);\r\n  }\r\n  //    else if (num > 10000000000 && num < 100000000000) {\r\n  //     //百亿\r\n  //     return (num / 10000000000).toFixed(2);\r\n  //   } else if (num > 100000000000 && num < 1000000000000) {\r\n  //     //千亿\r\n  //     return (num / 100000000000).toFixed(2);\r\n  //   } else if (num > 1000000000000 && num < 10000000000000) {\r\n  //     //万亿\r\n  //     return (num / 1000000000000).toFixed(2);\r\n  //   }\r\n  else {\r\n    return \"error 请输入1-10000000000 的数字\";\r\n  }\r\n}\r\nexport default {\r\n  formatNumber\r\n};\r\n","/*\r\n * @Author: t_winkjqzhang\r\n * @Date: 2022-04-02 15:01:30\r\n * @LastEditTime: 2022-04-02 17:55:09\r\n * @Description: Do not edit\r\n */\r\nexport *  from \"./throttle\";\r\nexport *  from \"./UrlGetRequest\";\r\nexport *  from \"./debounce\";\r\nexport *  from \"./changefilesize\";\r\nexport *  from \"./formatnumber\";\r\n"]}